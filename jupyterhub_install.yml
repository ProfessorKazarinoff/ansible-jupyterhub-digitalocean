# jupyterhub_install.yml
#
# An Ansible playbook to download Miniconda, create an environment and install JuptyerHub
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
  # Check if the conda environment jupyterhubenv exhists
    - name: Check if jupyterhubenv conda environment exhists
      stat: path=/opt/miniconda3/envs/jupyterhubenv
      register: jupyterhubenv_path
    - name: Check if jupyterhubenv has a Python executable
      stat: path=/opt/miniconda3/envs/jupyterhubenv/bin/python
      register: jupyterhubenv_python_executable_path
    - name: Check if /srv/jupyterhub directory exits
      stat: path=/srv/jupyterhub
      register: jupyterhub_srv_directory_path
    - name: Check if the proxy_auth_token exits
      stat: path=/srv/jupyterhub/proxy_auth_token
      register: proxy_auth_token_path
    - name: Tell me how big the proxy_auth_token_is
      debug:
        msg: The proxy auth token exits and is {{ proxy_auth_token_path.stat.size }} bytes
      when: proxy_auth_token_path.stat.exists
    - name: Check if the cookie_secret exits
      stat: path=/srv/jupyterhub/jupyterhub_cookie_secret
      register: cookie_secret_path
    - name: Tell me how big the cookie_secret is
      debug:
        msg: The cookie_secret exists and is {{ cookie_secret_path.stat.size }} bytes
      when: cookie_secret_path.stat.exists

  # Create jupyterhubenv and install conda packages

    - name: Create conda env jupyterhubenv
      shell: /opt/miniconda3/bin/conda create -y --prefix /opt/miniconda3/envs/jupyterhubenv
      become: yes
      when: not jupyterhubenv_path.stat.exists and not jupyterhubenv_python_executable_path.stat.exists

    - name: Install NumPy Matplotlib Pandas Jupyter xlrd SymPy
      shell: /opt/miniconda3/bin/conda install -y --prefix /opt/miniconda3/envs/jupyterhubenv {{ item }}
      with_items: "{{ conda_packages }}"

    - name: Install JupyterHub and JupyterLab from the conda-forge channel
      shell: /opt/miniconda3/bin/conda install -y --prefix /opt/miniconda3/envs/jupyterhubenv -c conda-forge {{ item }}
      with_items: "{{ conda_forge_packages }}"

    - name: jupyterhubenv - read permission for all
      file:
        path: /opt/miniconda3/envs/jupyterhubenv
        mode: +r
        recurse: yes
      become: yes

  # Create the /etc/jupyterhub directory
    - name: Create the /etc/jupyterhub directory
      file:
        path: /etc/jupyterhub
        state: directory
        owner: root
        group: "{{ user_name }}"
        mode: '0770'
      when: not jupyterhub_srv_directory_path.stat.exists
  # Copy over or create the jupyterhub_config.py
    - name: Template a file to /etc/jupyterhub/jupyterhub_config.py
      template:
        # need to make this a relative path source
        src: templates/jupyterhub_config_simple.j2
        dest: /etc/jupyterhub/jupyterhub_config.py
        owner: root
        group: "{{ user_name }}"
        mode: '0770'
      become: yes
  # Create cookie secret and proxy auth token
    - name: create /srv/jupyterhub directory
      file:
        path: /srv/jupyterhub
        owner: root
        group: sudo
        mode: '0760'
        state: directory
      become: yes
      when: not jupyterhub_srv_directory_path.stat.exists

    # cookie_secret
    - name: Create cookie secret file with openssl using shell
      shell: openssl rand -hex 32 > /srv/jupyterhub/jupyterhub_cookie_secret
      args:
        executable: /bin/bash
        creates: /srv/jupyterhub/jupyterhub_cookie_secret
      become: yes
    - name: Change jupyterhub_cookie_secret file permissions to 600
      file:
        path: /srv/jupyterhub/jupyterhub_cookie_secret
        owner: root
        group: sudo
        mode: '0600'
      become: yes

    # proxy_auth_token
    - name: Create proxy_auth_token file with openssl using shell
      shell: openssl rand -hex 32 > /srv/jupyterhub/proxy_auth_token
      args:
        executable: /bin/bash
        creates: /srv/jupyterhub/proxy_auth_token
      become: yes
    - name: Change proxy_auth_token file permissions to 600
      file:
        path: /srv/jupyterhub/proxy_auth_token
        owner: root
        group: sudo
        mode: '0600'
      become: yes

  # Create the systemd file

    - name: Template a file to /etc/systemd/system/jupyterhub.service
      template:
        # need to make this a relative path source
        src: templates/jupyterhub.service.j2
        dest: /etc/systemd/system/jupyterhub.service
        owner: root
        group: sudo
        mode: '0644'
      become: yes
#    - name: just force systemd to reread configs (2.4 and above)
#      systemd:
#        daemon_reload: yes
#    - name: Start/Make sure the jupyterhub systemd service is running
#      systemd:
#        state: started
#        name: jupyterhub  

  # Run jupyterhub as a system service
